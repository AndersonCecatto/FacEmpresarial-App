{"remainingRequest":"C:\\Users\\Anderson\\Desktop\\FacEmpresarial\\fac\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anderson\\Desktop\\FacEmpresarial\\fac\\src\\components\\Inicial\\AbrirTopicoComponent.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Anderson\\Desktop\\FacEmpresarial\\fac\\src\\components\\Inicial\\AbrirTopicoComponent.vue","mtime":1679280988927},{"path":"C:\\Users\\Anderson\\Desktop\\FacEmpresarial\\fac\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anderson\\Desktop\\FacEmpresarial\\fac\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anderson\\Desktop\\FacEmpresarial\\fac\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anderson\\Desktop\\FacEmpresarial\\fac\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anderson\\Desktop\\FacEmpresarial\\fac\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucXVlYnJhbGluaGF7CiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7Cn0KCi5mb250IHsKICAgIGNvbG9yOiBibGFjazsKfQoK"},{"version":3,"sources":["AbrirTopicoComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA;;AAEA;AACA;AACA","file":"AbrirTopicoComponent.vue","sourceRoot":"src/components/Inicial","sourcesContent":["<template>\r\n    <dialog-component\r\n        :tituloDialog=\"tituloDialog\"\r\n        @close=\"closeDialog\"\r\n        :dialog=\"dialog\"\r\n    >\r\n        <template v-slot:text>\r\n            <v-container fluid class=\"font\">\r\n                <p v-html=\"quebraLibra(item.descricao)\"></p>\r\n                <v-row \r\n                    v-if=\"item.Imagens.length > 0\"\r\n                >\r\n                    <v-col\r\n                        cols=\"12\"\r\n                        sm=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        class=\"my-5\"\r\n                        v-for=\"(item, position) in item.Imagens\"\r\n                        :key=\"item.id\"\r\n                    >\r\n                        <p>{{ item.nome }}</p>\r\n                        <v-card\r\n                            elevation=\"8\"\r\n                            max-height=\"150\"\r\n                            max-width=\"270\"\r\n                        >\r\n                            <v-img \r\n                                max-height=\"150\"\r\n                                max-width=\"270\"\r\n                                :lazy-src=\"ExibirImagem(item)\"\r\n                                :src=\"ExibirImagem(item)\"\r\n                            >\r\n                            </v-img>\r\n                        <v-card-actions\r\n                            class=\"justify\"\r\n                        >\r\n                            <v-btn\r\n                                outlined\r\n                                color=\"green\"\r\n                                @click=\"AbrirImagem(ExibirImagem(item))\"\r\n                            >\r\n                                Abrir\r\n                            </v-btn>\r\n                            <v-btn\r\n                                outlined\r\n                                color=\"red\"\r\n                                @click=\"ExcluirImagem(position, item)\"\r\n                            >\r\n                                Excluir\r\n                            </v-btn>\r\n                        </v-card-actions>\r\n                        </v-card>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-container>\r\n            <dialog-not-persistent-component :dialogNew=\"dialogImagem\">\r\n                <v-img \r\n                    max-height=\"500\"\r\n                    max-width=\"500\"\r\n                    :src=\"imagemShow\"></v-img>\r\n            </dialog-not-persistent-component>\r\n            <load-component :Ativo=\"loader\"/>\r\n        </template>\r\n    </dialog-component>\r\n</template>\r\n<script>\r\n\r\nimport api from '@/services/api.js'\r\nimport DialogComponent from '../Fields/DialogComponent.vue'\r\nimport DialogNotPersistentComponent from '../Fields/DialogNotPersistentComponent.vue'\r\nimport LoadComponent from '../Fields/LoadComponent.vue'\r\n\r\nexport default {\r\n  components: { DialogComponent, DialogNotPersistentComponent, LoadComponent },\r\n    name: 'AbrirTopicoComponent.vue',\r\n    data: () => ({\r\n        tituloDialog: 'TÃ³pico',\r\n        overlay: false,\r\n        imagemShow: null,\r\n        dialogImagem: false,\r\n        loader: false,\r\n    }),\r\n    \r\n    methods: {\r\n        closeDialog() {\r\n            this.$emit('close', false)\r\n        },\r\n\r\n        quebraLibra(descricao) {\r\n            if (!descricao) return\r\n\r\n            descricao = descricao.replaceAll(\"\\n\", '<br/>')\r\n\r\n            return descricao\r\n        },\r\n\r\n        AbrirImagem(img){\r\n            this.imagemShow = img;\r\n            this.dialogImagem = !this.dialogImagem\r\n        },\r\n\r\n        ExcluirImagem(position, item) {\r\n\r\n            this.loader = !this.loader;\r\n            debugger\r\n\r\n            api.delete('Topico/Imagem/'+item.id)\r\n            .then(response => {\r\n                this.item.Imagens.splice(position, 1)\r\n                //this.$emit('salvar', { success: true, response: response })\r\n            })\r\n            .catch(error => {\r\n                //this.$emit('salvar', { success: false, response: error })\r\n                console.log(error)\r\n            })\r\n            .finally(() => this.loader = !this.loader)\r\n        },\r\n\r\n        ExibirImagem(item) {\r\n            debugger\r\n            this.item.Imagens\r\n            return window.atob(item.imagem)\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        item(val) {\r\n            this.tituloDialog = val.codigo +' - ' + val.titulo\r\n        }\r\n    },\r\n\r\n    props: {\r\n        dialog: Boolean,\r\n        item: Object\r\n    }\r\n}\r\n</script>\r\n<style>\r\n\r\n    .quebralinha{\r\n        word-break: break-all;\r\n    }\r\n\r\n    .font {\r\n        color: black;\r\n    }\r\n    \r\n</style>"]}]}